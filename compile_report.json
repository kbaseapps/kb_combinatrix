{
    "functions": {
        "run_combinatrix": {
            "name": "run_combinatrix",
            "comment": "Run the Combinatrix to produce a report detailing all possible combinations of the inputs.",
            "place": null,
            "input": [
                {
                    "type": "combinatrix.CombinatrixParams",
                    "comment": "input params for the Combinatrix"
                }
            ],
            "output": [
                {
                    "type": "combinatrix.ReportResults",
                    "comment": "output from the KBaseReport app"
                }
            ]
        }
    },
    "module_name": "combinatrix",
    "sdk_version": "1.2.6",
    "sdk_git_commit": "d11e795a4443ed01baae83c6d000685202387c5b",
    "impl_file_path": "lib/combinatrix/CombinatrixImpl.py",
    "spec_files": [
        {
            "content": "/*\nA KBase module: combinatrix\n*/\n\nmodule combinatrix {\n\n    /* a workspace id */\n    typedef int ws_id;\n\n    /* a workspace object reference string (of the form wsid/objid/ver) */\n    typedef string ws_ref;\n\n    /* output from the KBaseReport app */\n    typedef structure {\n        string report_name;\n        string report_ref;\n    } ReportResults;\n\n    /* dataset join information as specified in the UI */\n    typedef structure {\n        ws_ref t1_ref;\n        ws_ref t2_ref;\n        string t1_field;\n        string t2_field;\n    } JoinSpec;\n\n    /* input params for the Combinatrix */\n    typedef structure {\n        list<JoinSpec> join_list;\n        ws_id workspace_id;\n    } CombinatrixParams;\n\n    /*\n\n        Run the Combinatrix to produce a report detailing all possible combinations of the inputs.\n\n    */\n\n    funcdef run_combinatrix(CombinatrixParams params) returns (ReportResults output) authentication required;\n\n};\n",
            "file_name": "combinatrix.spec",
            "is_main": 1
        }
    ],
    "function_places": {}
}
